name: Run Pytest

on:
    workflow_dispatch:
    push:
        paths:
            - "src/*"
            - "src/**/*"
    pull_request:
        paths:
            - "src/*"
            - "src/**/*"

jobs:
    test-dev-local:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                python-version: ["3.10"]
        steps:
            #----------------------------------------------
            #       check-out repo and set-up python
            #----------------------------------------------
            - uses: actions/checkout@v3

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}

            #----------------------------------------------
            #  -----  install & configure poetry  -----
            #----------------------------------------------
            - name: Install Poetry
              uses: snok/install-poetry@v1
              with:
                  virtualenvs-create: true
                  virtualenvs-in-project: true
                  installer-parallel: true
            #----------------------------------------------
            #       load cached venv if cache exists
            #----------------------------------------------
            - name: Load cached venv
              id: cached-poetry-dependencies
              uses: actions/cache@v3
              with:
                  path: .venv
                  key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
            #----------------------------------------------
            # install dependencies if cache does not exist
            #----------------------------------------------
            - name: Install dependencies
              if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
              run: poetry install --no-interaction --no-root
            #----------------------------------------------
            # install your root project, if required
            #----------------------------------------------
            - name: Install library
              run: poetry install --no-interaction
            #----------------------------------------------
            #    run test suite
            #----------------------------------------------
            - name: Run tests
              run: |
                  source .venv/bin/activate
                  poe lint
                  poe test
            # ----------------------------------------------
            #             upload coverage stats
            # ----------------------------------------------
            - name: Upload coverage
              uses: codecov/codecov-action@v3
              with:
                  # token: ${{ secrets.CODECOV_TOKEN }} # Only required for private repositories
                  files: reports/coverage.xml
                  fail_ci_if_error: true
