---
name: test release

on:
    workflow_dispatch:
    push:
        tags:
            - "**"
    release:
        types:
            - published
    pull_request:

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    test-release:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: true
            matrix:
                python-version: ["3.10"]

        name: Python ${{ matrix.python-version }}

        steps:
            - uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5
              with:
                  egress-policy: audit
                  disable-sudo: true
                  allowed-endpoints: >
                      files.pythonhosted.org:443
                      github.com:443
                      pypi.org:443

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install git+https://github.com/natelandau/filemanager

            - name: create test files
              run: |
                  mkdir -p ~/test/30-39\ readme/31\ test\ files/31.01\ readme
                  mkdir ~/.filemanager
                  echo "[projects]\n[projects.test]\nname = \"Personal\"\npath = \"~/test"" > ~/.filemanager/filemanager.toml
                  cat ~/.filemanager/filemanager.toml
                  echo "file exists" > ~/test-readme-file.txt
                  cat ~/test-readme-file.txt

            - name: test moving file
              run: filemanager --force --sep=underscore --case=title --organize=test ~/test-readme-file.txt

            - name: confirm file exists
              run: |
                  ls -al ~/test/30-39\ readme/31\ test\ files/31.01\ readme
                  cat ~/test/30-39\ readme/31\ test\ files/31.01\ readme/Test_Readme_File.txt | grep "exists"
